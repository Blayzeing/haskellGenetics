*EightOff> let test1 = ([],[[(King, Hearts),(Ace, Diamonds)],[(Seven, Spades)]],[])
*EightOff> findKingMoves test1
[([],[[(King,Hearts)],[(Ace,Diamonds)],[(Seven,Spades)]],[])]
*EightOff> let test2 = ([],[[(King, Hearts),(Ace, Diamonds)],[(Seven, Spades)]],[(King, Clubs)])
*EightOff> findKingMoves test2
[([],[[(King,Clubs)],[(King,Hearts),(Ace,Diamonds)],[(Seven,Spades)]],[]),([],[[(King,Hearts)],[(Ace,Diamonds)],[(Seven,Spades)]],
[(King,Clubs)])]
*EightOff>



*EightOff> let test3 = ([], [[(Eight, Diamonds), (Six, Hearts)],[(Seven, Diamonds), (Nine, Clubs)]], [])
*EightOff> let test4 = ([], [[(Eight, Diamonds), (Six, Hearts)],[(Nine, Diamonds), (Nine, Clubs)]], [(Seven, Diamonds)])
*EightOff> findNonKingMoves test3
[([],[[(Seven,Diamonds),(Eight,Diamonds),(Six,Hearts)],[(Nine,Clubs)]],[])]
*EightOff> findNonKingMoves test4
[([],[[(Seven,Diamonds),(Eight,Diamonds),(Six,Hearts)],[(Nine,Diamonds),(Nine,Clubs)]],[]),([],[[(Six,Hearts)],[(Eight,Diamonds),(
Nine,Diamonds),(Nine,Clubs)]],[(Seven,Diamonds)])]

Uncovers correct card, gives correct score to uncovering of card:
*EightOff> let test5 = ([], [[(Eight, Diamonds), (Six, Hearts)],[(Three, Clubs),(Seven, Diamonds), (Nine, Clubs)]], [])
*EightOff> findNonKingMoves test5
[(([],[[(Eight,Diamonds),(Six,Hearts)],[(Seven,Diamonds),(Nine,Clubs)]],[(Three,Clubs)]),1)]

Correctly adjusts the weights, as Six of Diamonds is a more important card:
*EightOff> let test6 = ([(Six,Diamonds)], [[(Eight,Diamonds),(Six,Hearts)],[(Three,Clubs),(Seven,Diamonds),(Nine,Clubs)]], [])
*EightOff> findNonKingMoves test6
[(([(Six,Diamonds)],[[(Eight,Diamonds),(Six,Hearts)],[(Seven,Diamonds),(Nine,Clubs)]],[(Three,Clubs)]),0)]

The act of moving a card out of the reserves holds a higher rank than that of moving a card between columns:
(And orders moves)
*EightOff> let test4 = ([], [[(Eight, Diamonds), (Six, Hearts)],[(Nine, Diamonds), (Nine, Clubs)]], [(Seven, Diamonds)])
*EightOff> findNonKingMoves test4
[(([],[[(Seven,Diamonds),(Eight,Diamonds),(Six,Hearts)],[(Nine,Diamonds),(Nine,Clubs)]],[]),-1),(([],[[(Six,Hearts)],[(Eight,Diamo
nds),(Nine,Diamonds),(Nine,Clubs)]],[(Seven,Diamonds)]),0)]

Shows everything working - Ranking of importance based on reserve leaving, Proper new formation of king stacks, movement between columns:
*EightOff> let test7 = ([], [[(Eight, Diamonds), (Six, Hearts)],[(Nine, Diamonds), (Nine, Clubs)], [(King, Clubs)]], [(Seven, Diam
onds), (King, Spades)])
*EightOff> findMoves test7
[([],[[(King,Spades)],[(Eight,Diamonds),(Six,Hearts)],[(Nine,Diamonds),(Nine,Clubs)],[(King,Clubs)]],[(Seven,Diamonds)]),([],[[(Se
ven,Diamonds),(Eight,Diamonds),(Six,Hearts)],[(Nine,Diamonds),(Nine,Clubs)],[(King,Clubs)]],[(King,Spades)]),([],[[(Six,Hearts)],[
(Eight,Diamonds),(Nine,Diamonds),(Nine,Clubs)],[(King,Clubs)]],[(Seven,Diamonds),(King,Spades)])]

######## NEW TESTS ################
Adding sequences:
*EightOff> let col1 = [(Nine, Hearts), (Ten, Hearts), (Jack, Clubs)]
*EightOff> let col2 = [(Three, Hearts), (Six, Diamonds)]
*EightOff> let col3 = []
*EightOff> let col4 = [(King, Diamonds), (Jack, Hearts), (Ace, Spades)]
*EightOff> let cols = [col1,col2,col3,col4]
*EightOff> cols
[[(Nine,Hearts),(Ten,Hearts),(Jack,Clubs)],[(Three,Hearts),(Six,Diamonds)],[],[(King,Diamonds),(Jack,Hearts),(Ace,Spades)]]
*EightOff> let newSequence = [(Seven, Hearts), (Eight, Hearts)]
*EightOff> addToColumns cols newSequence
[[(Seven,Hearts),(Eight,Hearts),(Nine,Hearts),(Ten,Hearts),(Jack,Clubs)],[(Three,Hearts),(Six,Diamonds)],[(King,Diamonds),(Jack,He
arts),(Ace,Spades)]]


*EightOff> getSuccSequence [(Three, Hearts), (Four, Hearts), (Nine, Clubs), (Ten, Clubs), (Ace, Diamonds)]
[(Three,Hearts),(Four,Hearts)]